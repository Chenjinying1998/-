<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.tw.mapper.BedroomMapper">
	<resultMap type="cn.tw.domain.Bedroom" id="bedroomRM">
		<id property="bedroomId" column="BEDROOM_ID" />
		<result property="bedroomName" column="BEDROOM_NAME" />
		<result property="apartmentId" column="APARTMENT_ID" />
		<result property="status" column="STATUS" />
		<result property="totalBed" column="TOTAL_BED" />
	</resultMap>

	<select id="find" parameterType="map" resultMap="bedroomRM">
				 
		 select bedroom_id , apartment_id ,  bedroom_name,status,total_bed
		 from bedroom          
		 where 1=1
		 <if test="apmId!=null">and apartment_id=#{apmId,jdbcType=VARCHAR}</if>
		 <if test="status!=null">and status=#{status,jdbcType=VARCHAR}</if>
		 order by bedroom_name
		 
	</select>

	<select id="findPage" parameterType="cn.tw.pagination.Page" resultMap="bedroomRM">


 
 			  
                           select *
                           from bedroom          
                           where 1=1
                           <if test="params.arg!=null">and status=#{params.arg,jdbcType=VARCHAR}</if>
                           <if test="params.key!='%null%'">and bedroom_name like #{params.key,jdbcType=VARCHAR}</if>
                        
	</select>	
	
	<select id="findResultSize" parameterType="cn.tw.pagination.Page" resultType="java.lang.String">
           SELECT max(@rownum)
           FROM bedroom
           where 1=1
             <if test="params.arg!=null">and status=#{params.arg,jdbcType=VARCHAR}</if>
             <if test="params.key!='%null%'">and bedroom_name like #{params.key,jdbcType=VARCHAR}</if>
	</select>



	<select id="get" parameterType="string" resultMap="bedroomRM">
         select bedroom_id , apartment_id ,  bedroom_name,status,total_bed
                  from bedroom          
                  where 1=1 and bedroom_id=#{bedroomId,jdbcType=VARCHAR} 
	</select>
	<insert id="insert" parameterType="cn.tw.domain.Bedroom">
		insert into   bedroom
	    (bedroom_id,bedroom_name,apartment_id,status,total_bed)
	    values
	    (#{bedroomId,jdbcType=VARCHAR},#{bedroomName,jdbcType=VARCHAR},
	     #{apartmentId,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR},
	     #{totalBed,jdbcType=VARCHAR})
	</insert>
	
	<update id="update" parameterType="cn.tw.domain.Bedroom">
		
		update bedroom
		<set>
		 		<if test="bedroomName">bedroom_name=#{bedroomName,jdbcType=VARCHAR},</if>
		 		<if test="apartmentId">apartment_id=#{apartmentId,jdbcType=VARCHAR},</if>
		 		<if test="status">status=#{status,jdbcType=VARCHAR},</if>
		 		<if test="totalBed">total_bed=#{totalBed,jdbcType=VARCHAR}</if>
		</set>
		where     bedroom_id=#{bedroomId,jdbcType=VARCHAR}
	</update>

	<delete id="deleteById" parameterType="string">
		delete from bedroom
		where
		bedroom_id=#{bedroomId}
	</delete>
	<delete id="delete" parameterType="string">
		delete from bedroom
		where bedroom_id in
		<foreach collection="array" item="id" open="(" close=")"
			separator=",">
			#{id}
		</foreach>
	</delete>

</mapper>
